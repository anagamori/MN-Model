%==========================================================================
% pool_parameter.m
% Author: Akira Nagamori
% Last update: 9/16/19
% Descriptions:
%   - Find an index that divides a pool into slow and fast motor units (index_slow)
%   - Find recruitment thresholds of individual motor units
%==========================================================================
close all
clear all
clc

code_folder = '/Users/akira/Documents/GitHub/MN-Model/Cisi2008';
data_folder = '/Users/akira/Documents/GitHub/MN-Model/Cisi2008/MN Parameter';

%% Muscle architectural parameters
modelParameter.pennationAngle = 3.1*pi/180; %[radians]
modelParameter.optimalLength = 5.98; % [cm]
modelParameter.tendonSlackLength = 23; %23.0; %24.1; % [cm]
modelParameter.mass = 0.0134; % [g]
modelParameter.muscleInitialLength = 5.98; % [cm]
modelParameter.tendonInitialLength = 23; %23.0; %24.1; % [cm]

density = 1.06; %
L0 = modelParameter.optimalLength; % optimal muscle length [cm]
mass = modelParameter.mass; % muscle mass [kg]
PCSA = (mass*1000)/(density*L0); % PCSA of muscle
sigma = 31.8; % specific tension
modelParameter.F0 = PCSA * sigma; % maximal force

%% Motor unit parameters
modelParameter.N_MU = 120; % number of motor units
modelParameter.i_MU = 1:modelParameter.N_MU; % index for motor units

%% Peak tetanic force
RP_MU = 25; %range of peak tension across motor untis in unit of fold
b_MU = log(RP_MU)/modelParameter.N_MU; %coefficient to establish a range of twich force values
P_MU = exp(b_MU*modelParameter.i_MU); %force generated by a motor unit as a function of its recruitment threshold
PTi = P_MU./sum(P_MU)*modelParameter.F0; % peak tetanic force for individual units

%% Fractional PSCA
F_pcsa_slow = 0.3; % fractional PSCA of slow-twitch motor units (0-1)
[~, modelParameter.index_slow] = min(abs(cumsum(PTi) - modelParameter.F0*F_pcsa_slow)); 

%% Assign peak tetanic force into each unit
% shuffle indexes within each fiber type with respect to contraction time
% this will allow us to randomly assign peak tetanic tension to each motor
% unit with different contraction time
rng(1)
R_slow = randperm(modelParameter.index_slow);
index_fast = modelParameter.index_slow+1:modelParameter.N_MU;
R_fast_temp = randperm(length(index_fast));
R_fast = index_fast(R_fast_temp);
index_MU_PTi = [R_slow R_fast]; % vector of indexes to match peak tetanic tension to appropriate contraction time
modelParameter.PTi = PTi(index_MU_PTi);

%% Recruitment threshold
% Find recruitment threshold for individual units using exponential fit
% Recruitment threshold is correlated to peak tetanic tension
%   Use index_MU_PTi to appropriately index each MU
Ur = 0.5; % recruitment threshold for the lastly recruited motor unit
Ur_1 = 0.01; % reruitment threshold for the first unit
f_RT = fit([1 modelParameter.N_MU]',[Ur_1 Ur]','exp1');
coeffs_f_RT = coeffvalues(f_RT);
U_th = coeffs_f_RT(1)*exp(coeffs_f_RT(2)*modelParameter.i_MU); % the resulting recruitment threshold for individual units
modelParameter.U_th = U_th(index_MU_PTi);

%% Save model parameters
cd(data_folder)
save('modelParameter','modelParameter')
cd(code_folder)


